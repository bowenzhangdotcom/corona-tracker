{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","createCardTemplate","headerName","dataName","body2Text","styleType","Grid","item","component","Card","xs","md","className","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","container","spacing","justify","infected","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","ReactGA","initialize","pageview","window","location","pathname","search","App","state","setState","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e6689b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'; \nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed) {\n        return 'Loading...'\n    }\n\n    function createCardTemplate(headerName, dataName, body2Text, styleType) {\n        return (\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styleType)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>{headerName}</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp start={0} end={dataName.value} duration={1.5} separator=\",\"/>\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">{body2Text}</Typography>\n                </CardContent>\n            </Grid>\n        );\n    }\n    \n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                {createCardTemplate('Infected', confirmed,'Number of active cases of COVID-19',styles.infected)}\n                {createCardTemplate('Recovered', recovered,'Number of recoveries from COVID-19', styles.recovered)}\n                {createCardTemplate('Deaths', deaths,'Number of deaths caused by COVID-19', styles.deaths)}\n            </Grid>\n        \n        </div>\n    );\n}\n\nexport default Cards; ","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error + \" Looks like the daily API is broken!\");\n    return {};\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error + \" Looks like the country API is broken!\");\n    return {};\n  }\n};\n","import React, { useState, useEffect} from 'react'; \nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'; \n\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length > 1\n        ? (\n        <Line\n            data={{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                }],\n            }}\n        />) : null\n    );\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar \n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0, 0, 255, 0.5)',\n                                'rgba(0, 255, 0, 0.5)',\n                                'rgba(255, 0, 0, 0.5)'\n                            ],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n\n                    }}\n                    options={{\n                        legend: {display:false},\n                        title: {display: true, text:`Current state in ${country}`}\n                    }}\n                />\n            ): null \n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    );\n}\n\nexport default Chart; ","import React, {useState, useEffect} from 'react'; \nimport {NativeSelect, FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    \n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries()); \n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n    \n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key = {i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    );\n}\n\nexport default CountryPicker; ","import React from \"react\";\n\nimport { Cards, CountryPicker, Chart } from \"./components\";\nimport { fetchData } from \"./api/\";\nimport styles from \"./App.module.css\";\n\nimport image from \"./images/image.png\";\n\nimport ReactGA from \"react-ga\";\nReactGA.initialize(\"UA-167431009-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'; \n\nReactDOM.render(<App />, document.getElementById('root')); ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}